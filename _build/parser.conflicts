
** Conflict (shift/reduce) in state 77.
** Token involved: EOF
** This state is reached from main after reading:

NOT formula_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
(?)

** In state 77, looking ahead at EOF, reducing production
** formula_expr -> NOT formula_expr
** is permitted because of the following sub-derivation:

formula_expr EOF // lookahead token appears
NOT formula_expr . 

** In state 77, looking ahead at EOF, shifting is permitted
** because of the following sub-derivation:

NOT main 
    formula_expr . EOF 

** Conflict (shift/reduce) in state 75.
** Tokens involved: OR IMPL EQUIV AND
** The following explanations concentrate on token OR.
** This state is reached from main after reading:

EXISTS ID formula_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
(?)

** In state 75, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

EXISTS ID formula_expr 
          formula_expr . OR formula_expr 

** In state 75, looking ahead at OR, reducing production
** formula_expr -> EXISTS ID formula_expr
** is permitted because of the following sub-derivation:

formula_expr EOF 
formula_expr OR formula_expr // lookahead token appears
EXISTS ID formula_expr . 

** Conflict (shift/reduce) in state 72.
** Tokens involved: OR IMPL EQUIV AND
** The following explanations concentrate on token OR.
** This state is reached from main after reading:

FORALL ID formula_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
(?)

** In state 72, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

FORALL ID formula_expr 
          formula_expr . OR formula_expr 

** In state 72, looking ahead at OR, reducing production
** formula_expr -> FORALL ID formula_expr
** is permitted because of the following sub-derivation:

formula_expr EOF 
formula_expr OR formula_expr // lookahead token appears
FORALL ID formula_expr . 

** Conflict (shift/reduce) in state 62.
** Token involved: EOF
** This state is reached from main after reading:

OP NOT formula_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
OP main CL 
   (?)

** In state 62, looking ahead at EOF, reducing production
** formula_expr -> NOT formula_expr
** is permitted because of the following sub-derivation:

formula_expr EOF // lookahead token appears
NOT formula_expr . 

** In state 62, looking ahead at EOF, shifting is permitted
** because of the following sub-derivation:

NOT main 
    formula_expr . EOF 

** Conflict (shift/reduce) in state 60.
** Tokens involved: OR IMPL EQUIV CL AND
** The following explanations concentrate on token OR.
** This state is reached from main after reading:

OP EXISTS ID formula_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
OP main CL 
   (?)

** In state 60, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

EXISTS ID formula_expr 
          formula_expr . OR formula_expr 

** In state 60, looking ahead at OR, reducing production
** formula_expr -> EXISTS ID formula_expr
** is permitted because of the following sub-derivation:

formula_expr EOF 
formula_expr OR formula_expr // lookahead token appears
EXISTS ID formula_expr . 

** Conflict (shift/reduce) in state 57.
** Tokens involved: OR IMPL EQUIV CL AND
** The following explanations concentrate on token OR.
** This state is reached from main after reading:

OP FORALL ID formula_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
OP main CL 
   (?)

** In state 57, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

FORALL ID formula_expr 
          formula_expr . OR formula_expr 

** In state 57, looking ahead at OR, reducing production
** formula_expr -> FORALL ID formula_expr
** is permitted because of the following sub-derivation:

formula_expr EOF 
formula_expr OR formula_expr // lookahead token appears
FORALL ID formula_expr . 

** Conflict (shift/reduce) in state 48.
** Tokens involved: OR IMPL EQUIV AND
** The following explanations concentrate on token OR.
** This state is reached from main after reading:

NEXT FORALL ID formula_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
formula_expr EOF 
(?)

** In state 48, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

NEXT formula_expr 
     FORALL ID formula_expr 
               formula_expr . OR formula_expr 

** In state 48, looking ahead at OR, reducing production
** formula_expr -> FORALL ID formula_expr
** is permitted because of the following sub-derivation:

formula_expr OR formula_expr // lookahead token appears
NEXT formula_expr // lookahead token is inherited
     FORALL ID formula_expr . 

** Conflict (shift/reduce) in state 34.
** Tokens involved: OR IMPL EQUIV AND
** The following explanations concentrate on token OR.
** This state is reached from main after reading:

NEXT EXISTS ID formula_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
formula_expr EOF 
(?)

** In state 34, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

NEXT formula_expr 
     EXISTS ID formula_expr 
               formula_expr . OR formula_expr 

** In state 34, looking ahead at OR, reducing production
** formula_expr -> EXISTS ID formula_expr
** is permitted because of the following sub-derivation:

formula_expr OR formula_expr // lookahead token appears
NEXT formula_expr // lookahead token is inherited
     EXISTS ID formula_expr . 

** Conflict (reduce/reduce) in state 29.
** Tokens involved: OR IMPL EQUIV CL AND
** The following explanations concentrate on token OR.
** This state is reached from main after reading:

FALSE

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
formula_expr EOF 
(?)

** In state 29, looking ahead at OR, reducing production
** expression -> FALSE
** is permitted because of the following sub-derivation:

expression UNTIL expression 
expression OR expression // lookahead token appears
FALSE . 

** In state 29, looking ahead at OR, reducing production
** formula_expr -> FALSE
** is permitted because of the following sub-derivation:

formula_expr OR formula_expr // lookahead token appears
FALSE . 

** Conflict (reduce/reduce) in state 8.
** Tokens involved: OR IMPL EQUIV CL AND
** The following explanations concentrate on token OR.
** This state is reached from main after reading:

ID

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
formula_expr EOF 
(?)

** In state 8, looking ahead at OR, reducing production
** expression -> ID
** is permitted because of the following sub-derivation:

expression UNTIL expression 
expression OR expression // lookahead token appears
ID . 

** In state 8, looking ahead at OR, reducing production
** formula_expr -> ID
** is permitted because of the following sub-derivation:

formula_expr OR formula_expr // lookahead token appears
ID . 

** Conflict (reduce/reduce) in state 1.
** Tokens involved: OR IMPL EQUIV CL AND
** The following explanations concentrate on token OR.
** This state is reached from main after reading:

TRUE

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
formula_expr EOF 
(?)

** In state 1, looking ahead at OR, reducing production
** expression -> TRUE
** is permitted because of the following sub-derivation:

expression UNTIL expression 
expression OR expression // lookahead token appears
TRUE . 

** In state 1, looking ahead at OR, reducing production
** formula_expr -> TRUE
** is permitted because of the following sub-derivation:

formula_expr OR formula_expr // lookahead token appears
TRUE . 
